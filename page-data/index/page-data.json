{
    "componentChunkName": "component---src-templates-index-page-js",
    "path": "/",
    "result": {"data":{"markdownRemark":{"id":"d7e42c1d-7c16-5ed8-b85c-454bc265931a","html":"<p>기록하는 습관, We are what we repeatedly do. Excellence, then, is not an act, but a habit. 😅 안녕하세요 <strong>Moong Kim (김현정)</strong> 입니다. </p>\n<p>꾸준히 여러 주제로 찾아뵙겠습니다. 감사합니다!</p>","frontmatter":{"title":"Moongkim 개발일지","tagline":"Programmer","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/380f19c19efd24d13e26db089c540222/d4d2a/myprofile.jpg","srcSet":"/static/380f19c19efd24d13e26db089c540222/5b836/myprofile.jpg 128w,\n/static/380f19c19efd24d13e26db089c540222/53b2b/myprofile.jpg 256w,\n/static/380f19c19efd24d13e26db089c540222/d4d2a/myprofile.jpg 512w","sizes":"(min-width: 512px) 512px, 100vw"},"sources":[{"srcSet":"/static/380f19c19efd24d13e26db089c540222/98c63/myprofile.webp 128w,\n/static/380f19c19efd24d13e26db089c540222/36766/myprofile.webp 256w,\n/static/380f19c19efd24d13e26db089c540222/a79fe/myprofile.webp 512w","type":"image/webp","sizes":"(min-width: 512px) 512px, 100vw"}]},"width":585,"height":438.75}}},"cta":{"ctaText":"Know more","ctaLink":"/about"}}},"posts":{"edges":[{"node":{"id":"5ce188a9-3fdc-5989-823c-ed0e8a42db7a","excerpt":"트랜잭션의 특성 : ACID Atomic (원자성) - A가 B에게 만원을 입급했다면 A계좌에서 만원이 빠져나가고 B계좌로 만원이 들어오는 두가지 일은 모두 성공하거나 모두 실패해야한다. (all-or-nothing) Consistency (일관성) -  데이터는 미리 정의된 규칙에서만 수정이 가능한 특성을 의미합니다. 숫자컬럼에 문자열값을 저장이 안되도록 보장. Isolation…","frontmatter":{"date":"March 28, 2022","slug":"/transactional","title":"Transactional어노테이션과 ACID","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/e63d605e80cccd02cce0faa5c9a11a34/cdfcd/transactional.jpg","srcSet":"/static/e63d605e80cccd02cce0faa5c9a11a34/75751/transactional.jpg 86w,\n/static/e63d605e80cccd02cce0faa5c9a11a34/4cf42/transactional.jpg 173w,\n/static/e63d605e80cccd02cce0faa5c9a11a34/cdfcd/transactional.jpg 345w,\n/static/e63d605e80cccd02cce0faa5c9a11a34/270c7/transactional.jpg 690w","sizes":"(min-width: 345px) 345px, 100vw"},"sources":[{"srcSet":"/static/e63d605e80cccd02cce0faa5c9a11a34/a224f/transactional.webp 86w,\n/static/e63d605e80cccd02cce0faa5c9a11a34/65afb/transactional.webp 173w,\n/static/e63d605e80cccd02cce0faa5c9a11a34/f787c/transactional.webp 345w,\n/static/e63d605e80cccd02cce0faa5c9a11a34/17ce5/transactional.webp 690w","type":"image/webp","sizes":"(min-width: 345px) 345px, 100vw"}]},"width":345,"height":260}}}}}},{"node":{"id":"0578b566-ed2b-5398-be36-80c2073635bb","excerpt":"📋 Controller 테스트 작성 @WebMvcTest - MVC를 위한 테스트로 컨트롤러가 예상대로 동작하는지 테스트하는데 사용 Spring MVC 인프라를 자동 구성하고 스캔된 빈을 , , , , , , , , 및 . 일반 및 빈은 주석이 사용될 때 스캔되지 않습니다 .  참고 : https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features…","frontmatter":{"date":"March 28, 2022","slug":"/webMvcTest","title":"Controller 테스트 @WebMvcTest","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/9cf5dd5c1ba818075caa365103cec0b8/cdfcd/webMvcTest.jpg","srcSet":"/static/9cf5dd5c1ba818075caa365103cec0b8/75751/webMvcTest.jpg 86w,\n/static/9cf5dd5c1ba818075caa365103cec0b8/4cf42/webMvcTest.jpg 173w,\n/static/9cf5dd5c1ba818075caa365103cec0b8/cdfcd/webMvcTest.jpg 345w,\n/static/9cf5dd5c1ba818075caa365103cec0b8/270c7/webMvcTest.jpg 690w","sizes":"(min-width: 345px) 345px, 100vw"},"sources":[{"srcSet":"/static/9cf5dd5c1ba818075caa365103cec0b8/a224f/webMvcTest.webp 86w,\n/static/9cf5dd5c1ba818075caa365103cec0b8/65afb/webMvcTest.webp 173w,\n/static/9cf5dd5c1ba818075caa365103cec0b8/f787c/webMvcTest.webp 345w,\n/static/9cf5dd5c1ba818075caa365103cec0b8/17ce5/webMvcTest.webp 690w","type":"image/webp","sizes":"(min-width: 345px) 345px, 100vw"}]},"width":345,"height":260}}}}}},{"node":{"id":"f52c18f8-b623-51d4-afef-0d6866a7df6e","excerpt":"📋 Service 테스트 작성 @SpringBootTest는 application을 띄우기때문에 시간이 오래걸리고 무거워 단위테스트하는데는 알맞지 않다.  test안에서 어플리케이션의 모든 빈이 떠있기때문에 목객체를 만들지 않아도 service들을 @Autowired 로 사용가능 하지만 격리성이 떨어지고 DB에 데이터가 있어야지만 Test할 수 있으므로 아래와 같이 Mockito를 사용해서 Service 테스트를 작성해본다. JUnit…","frontmatter":{"date":"March 27, 2022","slug":"/ExtendWith","title":"Service 테스트 @ExtendWith","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/f57c58c11f484742cc1d8ce6e09248f9/cdfcd/extendWith.jpg","srcSet":"/static/f57c58c11f484742cc1d8ce6e09248f9/75751/extendWith.jpg 86w,\n/static/f57c58c11f484742cc1d8ce6e09248f9/4cf42/extendWith.jpg 173w,\n/static/f57c58c11f484742cc1d8ce6e09248f9/cdfcd/extendWith.jpg 345w,\n/static/f57c58c11f484742cc1d8ce6e09248f9/270c7/extendWith.jpg 690w","sizes":"(min-width: 345px) 345px, 100vw"},"sources":[{"srcSet":"/static/f57c58c11f484742cc1d8ce6e09248f9/a224f/extendWith.webp 86w,\n/static/f57c58c11f484742cc1d8ce6e09248f9/65afb/extendWith.webp 173w,\n/static/f57c58c11f484742cc1d8ce6e09248f9/f787c/extendWith.webp 345w,\n/static/f57c58c11f484742cc1d8ce6e09248f9/17ce5/extendWith.webp 690w","type":"image/webp","sizes":"(min-width: 345px) 345px, 100vw"}]},"width":345,"height":260}}}}}},{"node":{"id":"356fb14a-5cc1-5ebe-9923-5e8c649685d2","excerpt":"Dependency Injection (의존관계 주입) 의존성을 주입하는 방법을 고민하기 전 DI(의존관계 주입)에 대해 간단히 짚고 넘어가자. DI는 객체지향 프로그랭밍에서 중요한 개념으로 \"외부에서 두 객체 간의 관계를 결정해주어 유연성을 확보하고 결합도를 낮출수있다\" 가 핵심이다. 우리는 한객체가 다른 객체를 사용할때 의존성이 있다라고 이야기한다. 예를 들어 A 객체에서 B 객체를 사용하고 있는경우 A가 B…","frontmatter":{"date":"January 28, 2022","slug":"/constructor-injection","title":"생성자 주입, 필드 주입, 수정자 주입의 비교","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/bd0791d00fbe25290707bc6bebe5c907/cdfcd/constructorInjection.jpg","srcSet":"/static/bd0791d00fbe25290707bc6bebe5c907/75751/constructorInjection.jpg 86w,\n/static/bd0791d00fbe25290707bc6bebe5c907/4cf42/constructorInjection.jpg 173w,\n/static/bd0791d00fbe25290707bc6bebe5c907/cdfcd/constructorInjection.jpg 345w,\n/static/bd0791d00fbe25290707bc6bebe5c907/270c7/constructorInjection.jpg 690w","sizes":"(min-width: 345px) 345px, 100vw"},"sources":[{"srcSet":"/static/bd0791d00fbe25290707bc6bebe5c907/a224f/constructorInjection.webp 86w,\n/static/bd0791d00fbe25290707bc6bebe5c907/65afb/constructorInjection.webp 173w,\n/static/bd0791d00fbe25290707bc6bebe5c907/f787c/constructorInjection.webp 345w,\n/static/bd0791d00fbe25290707bc6bebe5c907/17ce5/constructorInjection.webp 690w","type":"image/webp","sizes":"(min-width: 345px) 345px, 100vw"}]},"width":345,"height":260}}}}}},{"node":{"id":"83274ff8-d1f6-52f6-a169-49660b017d46","excerpt":"@RestControllerAdvice 전역적으로 예외처리하기 , ,  가 적용된 메서드들에 를 적용해  단에 적용하기 위해 고안된 어노테이션이라고 한다.\n클래스에 선언하면 되며, 모든 에 대한, 전역적으로 발생할 수 있는 예외를 잡아서 처리할 수 있다. 💡 @RestControllerAdvice  = @ControllerAdvice + @ResponseBody…","frontmatter":{"date":"January 19, 2022","slug":"/restControllerAdvice","title":"RestControllerAdvice 예외처리","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/d9fa2b706d593c58cb9fb5140477cd45/cdfcd/restControllerAdvice.jpg","srcSet":"/static/d9fa2b706d593c58cb9fb5140477cd45/75751/restControllerAdvice.jpg 86w,\n/static/d9fa2b706d593c58cb9fb5140477cd45/4cf42/restControllerAdvice.jpg 173w,\n/static/d9fa2b706d593c58cb9fb5140477cd45/cdfcd/restControllerAdvice.jpg 345w,\n/static/d9fa2b706d593c58cb9fb5140477cd45/270c7/restControllerAdvice.jpg 690w","sizes":"(min-width: 345px) 345px, 100vw"},"sources":[{"srcSet":"/static/d9fa2b706d593c58cb9fb5140477cd45/a224f/restControllerAdvice.webp 86w,\n/static/d9fa2b706d593c58cb9fb5140477cd45/65afb/restControllerAdvice.webp 173w,\n/static/d9fa2b706d593c58cb9fb5140477cd45/f787c/restControllerAdvice.webp 345w,\n/static/d9fa2b706d593c58cb9fb5140477cd45/17ce5/restControllerAdvice.webp 690w","type":"image/webp","sizes":"(min-width: 345px) 345px, 100vw"}]},"width":345,"height":260}}}}}},{"node":{"id":"b9b9fa99-c55c-5a21-b022-1a8e7b0c7c8f","excerpt":"유효성체크 | Spring Boot 💡 Spring Boot 에서 유효성 체크를 하는 방법중  을 사용하여 유효성을 검증해보자 spring boot 2.3 version 이상부터는  의존성 내부에 있던 validation이 분리되었다. 그러므로 사용하는 spring boot version이 2.3 이상이라면 validation 의존성을 따로 추가해야한다. 아래는 Gradle…","frontmatter":{"date":"January 16, 2022","slug":"/springbootvalidation","title":"Spring Boot Validation","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/4a425068c53b6c41ba246ca8d83910f5/cdfcd/validation.jpg","srcSet":"/static/4a425068c53b6c41ba246ca8d83910f5/75751/validation.jpg 86w,\n/static/4a425068c53b6c41ba246ca8d83910f5/4cf42/validation.jpg 173w,\n/static/4a425068c53b6c41ba246ca8d83910f5/cdfcd/validation.jpg 345w,\n/static/4a425068c53b6c41ba246ca8d83910f5/270c7/validation.jpg 690w","sizes":"(min-width: 345px) 345px, 100vw"},"sources":[{"srcSet":"/static/4a425068c53b6c41ba246ca8d83910f5/a224f/validation.webp 86w,\n/static/4a425068c53b6c41ba246ca8d83910f5/65afb/validation.webp 173w,\n/static/4a425068c53b6c41ba246ca8d83910f5/f787c/validation.webp 345w,\n/static/4a425068c53b6c41ba246ca8d83910f5/17ce5/validation.webp 690w","type":"image/webp","sizes":"(min-width: 345px) 345px, 100vw"}]},"width":345,"height":260}}}}}}]}},"pageContext":{"id":"d7e42c1d-7c16-5ed8-b85c-454bc265931a","previous":{"id":"5ce188a9-3fdc-5989-823c-ed0e8a42db7a","frontmatter":{"slug":"/transactional","template":"blog-post","title":"Transactional어노테이션과 ACID"}},"next":{"id":"fa2f1161-b54c-5ce3-ad88-ee66e4094225","frontmatter":{"slug":"/about","template":"about-page","title":"기록하는 습관"}}}},
    "staticQueryHashes": ["228695001","2744905544","358227665"]}