{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/springbootvalidation",
    "result": {"data":{"markdownRemark":{"id":"b9b9fa99-c55c-5a21-b022-1a8e7b0c7c8f","html":"</br>\n<h3>유효성체크 | Spring Boot</h3>\n<p>Spring Boot 에서 유효성 체크를 하는 방법중 <code class=\"language-text\">spring-boot-starter-validation</code> 을 사용하여 유효성을 검증해보자</p>\n</br>\n<p>spring boot 2.3 version 이상부터는 <code class=\"language-text\">spring-boot-starter-web</code> 의존성 내부에 있던 <strong>validation</strong>이 분리되었다.</p>\n<p>그러므로 사용하는 spring boot version이 2.3 이상이라면 validation 의존성을 따로 추가해야한다.</p>\n</br>\n</br>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//Gradle</span>\nimplementation <span class=\"token string\">'org.springframework.boot:spring-boot-starter-validation'</span>\n    \n    \n<span class=\"token comment\">//Maven</span>\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">></span></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>spring<span class=\"token operator\">-</span>boot<span class=\"token operator\">-</span>starter<span class=\"token operator\">-</span>validation<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">2.5</span><span class=\"token number\">.2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">></span>    </code></pre></div>\n</br>\n<p>아래는 Gradle 에 의존성 추가를 하는 화면이다.</p>\n<p><figure class=\"gatsby-resp-image-figure\" style=\"\">\n    <span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 1024px; \"\n    >\n      <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 45.3125%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'182\\'%20viewBox=\\'0%200%20400%20182\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M77%2049v23H6v7l14-1h14l-5-1-5-1h-2c-2%201-4%201-3-1%201-1%2024-1%2024%201l-4%201%2017%201h21v104h17v-11h2c0-3%202-2%202%200l-1%202c-2-1-2%200-2%204v5h305V25H290l-141%201h-32v3c0%202%200%202-1%201v-3l-7-1c-12-2-13-1-15%202l-1%203%201-3v-3H77v24m29%2083c0%202%204%203%205%202h14c12%200%2014%200%2014-2l-2-1-3-1-2%202h-1c0-2-25-2-25%200m51-1c-4%200-6%202-3%203%202%201%205%200%205-1h1l7%201h12c10%200%2011%200%2010-2-2-1-22-2-32-1m33%201c0%201%203%202%2011%202h21c6%200%2010-1%206-2l-10-1h-18l-10%201m-84%207l3%201a1404%201404%200%200139-1c0-1-4-2-21-2s-21%201-21%202m19%2024h-10c-5%200-9%201-9%202l18%201h20l1-1c0-2-1-2-8-2h-12\\'%20fill=\\'%23d3d3d3\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"dependencies\"\n        title=\"dependencies\"\n        src=\"/static/e929f07cee82df3f67421f7873f938dd/2bef9/dependencies.png\"\n        srcset=\"/static/e929f07cee82df3f67421f7873f938dd/6f3f2/dependencies.png 256w,\n/static/e929f07cee82df3f67421f7873f938dd/01e7c/dependencies.png 512w,\n/static/e929f07cee82df3f67421f7873f938dd/2bef9/dependencies.png 1024w,\n/static/e929f07cee82df3f67421f7873f938dd/7af19/dependencies.png 1359w\"\n        sizes=\"(max-width: 1024px) 100vw, 1024px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n    </span>\n    <figcaption class=\"gatsby-resp-image-figcaption\">dependencies</figcaption>\n  </figure></p>\n</br>\n<ul>\n<li><strong>@NotNull</strong> : 해당 값에 Null을 허용하지 않음</li>\n<li><strong>@NotBlank</strong> : Null을 허용하지 않으며 문자가 한 개 이상 포함되어야 함 (공백 제외)</li>\n<li><strong>@NotEmpty</strong> : Null을 허용하지 않으며 공백 문자열을 허용하지 않음</li>\n<li><strong>@AssertTrue</strong> : true인지 확인</li>\n<li><strong>@Min</strong> : 값이 Min보다 작은지 확인 </li>\n<li><strong>@Max</strong> : 값이 Max보다 큰지 확인</li>\n<li>\n<p><strong>@Size</strong> : 값이 min과 max사이에 해당하는지 확인 (CharSequence, Collection, Map, Array에 해당)</p>\n<p>...등 다양한 어노테이션을 사용하여 유효성을 검증해보자!</p>\n</li>\n</ul>\n</br>\n<h3>Annotation 을 사용한 Validation검증</h3>\n<h4>class User</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span>dto</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Valid</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span>constraints<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LocalDate</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span>format<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DateTimeFormatter</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@NotBlank</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token annotation punctuation\">@Max</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span>  <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token annotation punctuation\">@Pattern</span><span class=\"token punctuation\">(</span>regexp <span class=\"token operator\">=</span> <span class=\"token string\">\"^\\\\d{2,3}-\\\\d{3,4}-\\\\d{4}$\"</span><span class=\"token punctuation\">,</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"핸드폰 번호의 양식 불일치\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> phoneNumber<span class=\"token punctuation\">;</span>\n    <span class=\"token annotation punctuation\">@Size</span><span class=\"token punctuation\">(</span>min <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> max <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> birthDate<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Valid</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Item</span><span class=\"token punctuation\">></span></span> items<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getPhoneNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> phoneNumber<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setPhoneNumber</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> phoneNumber<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>phoneNumber <span class=\"token operator\">=</span> phoneNumber<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getBirthDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> birthDate<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setBirthDate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> birthDate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>birthDate <span class=\"token operator\">=</span> birthDate<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Item</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> items<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setItems</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Item</span><span class=\"token punctuation\">></span></span> items<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>items <span class=\"token operator\">=</span> items<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@AssertTrue</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isBirthDateValidation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">LocalDate</span> localDate <span class=\"token operator\">=</span> <span class=\"token class-name\">LocalDate</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>birthDate <span class=\"token operator\">+</span> <span class=\"token string\">\"01\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">DateTimeFormatter</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofPattern</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yyyyMMdd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"User{\"</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\"name='\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", age=\"</span> <span class=\"token operator\">+</span> age <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", phoneNumber='\"</span> <span class=\"token operator\">+</span> phoneNumber <span class=\"token operator\">+</span> <span class=\"token string\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", birthDate='\"</span> <span class=\"token operator\">+</span> birthDate <span class=\"token operator\">+</span> <span class=\"token string\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", items=\"</span> <span class=\"token operator\">+</span> items <span class=\"token operator\">+</span>\n                <span class=\"token string\">'}'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</br>\n<p>User 는 여러 Item을 가지므로 <code class=\"language-text\">List&lt;Item> items</code> 를 추가한다면 <strong>@Valid</strong>  을 달아주어야 Item class에서 설정한 Validation 이 적용된다.</p>\n<p><strong>@Pattern</strong> 을 통해 표현식으로 다양한 유효성을 검증할 수도 있고 <strong>@Max</strong> <strong>@Size</strong> 등 다양한 어노테이션을 사용할 수 있다.</p>\n<p>또한 <strong>@AssertTrue</strong> 을 통해 원하는 검증 로직을 직점 커스텀 할수도 있다. 하지만 이 방법은 동일한 validation을 적용하려는 다른 class에도 반복되는 코드를 적어야하는 재사용성 측면에서 단점을 가지고있다.</p>\n<p>아래 유효성을 커스텀하는 다른 방법을 살펴볼 예정이니 우선 가볍게 넘어가자.</p>\n<h4>class Item</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span>dto</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fasterxml<span class=\"token punctuation\">.</span>jackson<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JsonProperty</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span>constraints<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">NotBlank</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Item</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@NotBlank</span>\n    <span class=\"token annotation punctuation\">@JsonProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TYPE\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> type<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> type<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> type<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Item{\"</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\"name='\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", Type='\"</span> <span class=\"token operator\">+</span> type <span class=\"token operator\">+</span> <span class=\"token string\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">'}'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>Controller</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span>controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span>dto<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">User</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BindingResult</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FieldError</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PostMapping</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestBody</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestMapping</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RestController</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Valid</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ApiController</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/user\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span> <span class=\"token function\">user</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Valid</span> <span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">User</span> user<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BindingResult</span> bindingResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bindingResult<span class=\"token punctuation\">.</span><span class=\"token function\">hasErrors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">StringBuilder</span> sb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            bindingResult<span class=\"token punctuation\">.</span><span class=\"token function\">getAllErrors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>objectError <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n                <span class=\"token class-name\">FieldError</span> field <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FieldError</span><span class=\"token punctuation\">)</span>objectError<span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">String</span> message <span class=\"token operator\">=</span> objectError<span class=\"token punctuation\">.</span><span class=\"token function\">getDefaultMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"field : \"</span> <span class=\"token operator\">+</span> field<span class=\"token punctuation\">.</span><span class=\"token function\">getField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"field : \"</span> <span class=\"token operator\">+</span> field<span class=\"token punctuation\">.</span><span class=\"token function\">getField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"message : \"</span> <span class=\"token operator\">+</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span>  <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>BAD_REQUEST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span>sb<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>응답 확인하기</p>\n<p><figure class=\"gatsby-resp-image-figure\" style=\"\">\n    <span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 1024px; \"\n    >\n      <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 45.70312499999999%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'183\\'%20viewBox=\\'0%200%20400%20183\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M108%2086H96l-13%201c0%202%201%202%206%202h10a462%20462%200%200119-1l-4-2h-6\\'%20fill=\\'%23d3d3d3\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"200\"\n        title=\"200\"\n        src=\"/static/11b34d904990b3998654d1b912214306/2bef9/200.png\"\n        srcset=\"/static/11b34d904990b3998654d1b912214306/6f3f2/200.png 256w,\n/static/11b34d904990b3998654d1b912214306/01e7c/200.png 512w,\n/static/11b34d904990b3998654d1b912214306/2bef9/200.png 1024w,\n/static/11b34d904990b3998654d1b912214306/d7ba6/200.png 1107w\"\n        sizes=\"(max-width: 1024px) 100vw, 1024px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n    </span>\n    <figcaption class=\"gatsby-resp-image-figcaption\">200</figcaption>\n  </figure></p>\n<p><figure class=\"gatsby-resp-image-figure\" style=\"\">\n    <span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 1024px; \"\n    >\n      <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 51.5625%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'207\\'%20viewBox=\\'0%200%20400%20207\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M7%209c0%201%200%202%201%201h8l2%201h7l4-1h1l4%201c3%200%204-1%204-2l-1-2-2%201H18l-3-1h-4L9%206C7%206%207%207%207%209M0%2025v8h401V16H0v9\\'%20fill=\\'%23d3d3d3\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"200response\"\n        title=\"200response\"\n        src=\"/static/8f98b9baa1b1745c97a04ac70d4ac5d1/2bef9/200response.png\"\n        srcset=\"/static/8f98b9baa1b1745c97a04ac70d4ac5d1/6f3f2/200response.png 256w,\n/static/8f98b9baa1b1745c97a04ac70d4ac5d1/01e7c/200response.png 512w,\n/static/8f98b9baa1b1745c97a04ac70d4ac5d1/2bef9/200response.png 1024w,\n/static/8f98b9baa1b1745c97a04ac70d4ac5d1/21335/200response.png 1082w\"\n        sizes=\"(max-width: 1024px) 100vw, 1024px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n    </span>\n    <figcaption class=\"gatsby-resp-image-figcaption\">200response</figcaption>\n  </figure></p>\n</br>\n<p>age를 65 로 바꿔서 요청해보면</p>\n<p><figure class=\"gatsby-resp-image-figure\" style=\"\">\n    <span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 1024px; \"\n    >\n      <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 37.5%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'150\\'%20viewBox=\\'0%200%20400%20150\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M1%2032v8h399V23H1v9\\'%20fill=\\'%23d3d3d3\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"400response\"\n        title=\"400response\"\n        src=\"/static/72361e092fbfa8e5998b7b3947c355a1/2bef9/400response.png\"\n        srcset=\"/static/72361e092fbfa8e5998b7b3947c355a1/6f3f2/400response.png 256w,\n/static/72361e092fbfa8e5998b7b3947c355a1/01e7c/400response.png 512w,\n/static/72361e092fbfa8e5998b7b3947c355a1/2bef9/400response.png 1024w,\n/static/72361e092fbfa8e5998b7b3947c355a1/d53ff/400response.png 1068w\"\n        sizes=\"(max-width: 1024px) 100vw, 1024px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n    </span>\n    <figcaption class=\"gatsby-resp-image-figcaption\">400response</figcaption>\n  </figure></p>\n<p>age 는 60 이하여야한다는 메세지를 확인할 수 있다.</p>\n<p>유효성을 검증하는 어노테이션을 직접 만들어서 반복 사용할 수 있도록 코드를 구현해보자.</p>\n<h4>@interface DatePattern</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span>annotation</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span>validator<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DateValidator</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Constraint</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Payload</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Retention</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Target</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">.</span>TYPE_USE<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RetentionPolicy</span><span class=\"token punctuation\">.</span>RUNTIME<span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Constraint</span><span class=\"token punctuation\">(</span>validatedBy <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\">DateValidator</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Target</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> METHOD<span class=\"token punctuation\">,</span> FIELD<span class=\"token punctuation\">,</span> ANNOTATION_TYPE<span class=\"token punctuation\">,</span> CONSTRUCTOR<span class=\"token punctuation\">,</span> PARAMETER<span class=\"token punctuation\">,</span> TYPE_USE <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Retention</span><span class=\"token punctuation\">(</span>RUNTIME<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">DatePattern</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token class-name\">String</span> <span class=\"token function\">message</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token string\">\"날짜 유효성 검증 실패\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">groups</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Payload</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">payload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">String</span> <span class=\"token function\">pattern</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token string\">\"yyyyMMdd\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n</br>\n<h4>class DateValidator</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span>validator</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DatePattern</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConstraintValidator</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConstraintValidatorContext</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LocalDate</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span>format<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DateTimeFormatter</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DateValidator</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ConstraintValidator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DatePattern</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> datePattern<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DatePattern</span> constraintAnnotation<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>datePattern <span class=\"token operator\">=</span> constraintAnnotation<span class=\"token punctuation\">.</span><span class=\"token function\">pattern</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isValid</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> value<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ConstraintValidatorContext</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>datePattern<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yyyyMM\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                value <span class=\"token operator\">=</span> value <span class=\"token operator\">+</span> <span class=\"token string\">\"01\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">LocalDate</span> localDate <span class=\"token operator\">=</span> <span class=\"token class-name\">LocalDate</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">+</span><span class=\"token string\">\"01\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">DateTimeFormatter</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofPattern</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>datePattern<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이전에 만들었던 User class 에서@AssertTrue 를 달았던 isBirthDateValidation 메서드를 제거하고</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@DatePattern</span><span class=\"token punctuation\">(</span>pattern <span class=\"token operator\">=</span> <span class=\"token string\">\"yyyyMM\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> birthDate<span class=\"token punctuation\">;</span></code></pre></div>\n<p>birthDate 필드에 커스텀한 어노테이션 을 달아주자</p>\n<p><code class=\"language-text\">pattern = \"yyyyMM\"</code> 으로 설정하였기 때문에 Body에서 날짜를 20220117 혹은 aaaa 등과같이 <strong>yyyyMM</strong> 을 지키지 않으면 <strong>날짜 유효성 검증 실패</strong> 메세지를 Return 한다.</p>","excerpt":"유효성체크 | Spring Boot Spring Boot 에서 유효성 체크를 하는 방법중  을 사용하여 유효성을 검증해보자 spring boot 2.3 version 이상부터는  의존성 내부에 있던 validation이 분리되었다. 그러므로 사용하는 spring…","frontmatter":{"date":"January 16, 2022","slug":"/springbootvalidation","title":"Spring Boot Validation","description":"Spring RestAPI","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/4a425068c53b6c41ba246ca8d83910f5/4a49b/validation.jpg","srcSet":"/static/4a425068c53b6c41ba246ca8d83910f5/37bba/validation.jpg 750w,\n/static/4a425068c53b6c41ba246ca8d83910f5/61c72/validation.jpg 1080w,\n/static/4a425068c53b6c41ba246ca8d83910f5/4a49b/validation.jpg 1280w","sizes":"100vw"},"sources":[{"srcSet":"/static/4a425068c53b6c41ba246ca8d83910f5/a66aa/validation.webp 750w,\n/static/4a425068c53b6c41ba246ca8d83910f5/65dd5/validation.webp 1080w,\n/static/4a425068c53b6c41ba246ca8d83910f5/71d4d/validation.webp 1280w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5625}}}}}},"pageContext":{"id":"b9b9fa99-c55c-5a21-b022-1a8e7b0c7c8f","previous":{"id":"d840f352-5e20-57bd-9951-b95fdc901423","frontmatter":{"slug":"/mysqlengines","template":"blog-post","title":"MySQL 서버 기초"}},"next":{"id":"d7e42c1d-7c16-5ed8-b85c-454bc265931a","frontmatter":{"slug":"/","template":"index-page","title":"Moongkim 개발일지"}}}},
    "staticQueryHashes": ["228695001","2744905544","358227665"]}