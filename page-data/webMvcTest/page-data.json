{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/webMvcTest",
    "result": {"data":{"markdownRemark":{"id":"0578b566-ed2b-5398-be36-80c2073635bb","html":"</br>\n<h2>📋 Controller 테스트 작성</h2>\n<p>@WebMvcTest - MVC를 위한 테스트로 컨트롤러가 예상대로 동작하는지 테스트하는데 사용</p>\n<blockquote>\n<p><code class=\"language-text\">@WebMvcTest</code>Spring MVC 인프라를 자동 구성하고 스캔된 빈을 <code class=\"language-text\">@Controller</code>, <code class=\"language-text\">@ControllerAdvice</code>, <code class=\"language-text\">@JsonComponent</code>, <code class=\"language-text\">Converter</code>, <code class=\"language-text\">GenericConverter</code>, <code class=\"language-text\">Filter</code>, <code class=\"language-text\">HandlerInterceptor</code>, <code class=\"language-text\">WebMvcConfigurer</code>, <code class=\"language-text\">WebMvcRegistrations</code>및 <code class=\"language-text\">HandlerMethodArgumentResolver</code>. 일반 <code class=\"language-text\">@Component</code>및 빈은 주석이 사용될 <code class=\"language-text\">@ConfigurationProperties</code>때 스캔되지 않습니다 . </p>\n<p>참고 : <a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.testing\">https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.testing</a></p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@WebMvcTest</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DMakerController</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DMakerControllerTest</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">MockMvc</span> mockMvc<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token annotation punctuation\">@MockBean</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">DMakerService</span> dMakerService<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">Mediatype</span> contentType <span class=\"token operator\">=</span> \n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">MediaType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MediaType</span><span class=\"token punctuation\">.</span>APPLICATION_JSON<span class=\"token punctuation\">.</span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                     <span class=\"token class-name\">MediaType</span><span class=\"token punctuation\">.</span>APPLICATION_JSON<span class=\"token punctuation\">.</span><span class=\"token function\">getSubtype</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                     <span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span>UTF_8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">getAllDevelopers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">DeveloperDto</span> juniorDeveloperDto <span class=\"token operator\">=</span> <span class=\"token class-name\">DeveloperDto</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">developerSkillType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DeveloperSkillType</span><span class=\"token punctuation\">.</span>BACK_END<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">developerLevel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DeveloperLevel</span><span class=\"token punctuation\">.</span>JUNIOR<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">memberId</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"memberId\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">DeveloperDto</span> seniorDeveloperDto <span class=\"token operator\">=</span> <span class=\"token class-name\">DeveloperDto</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">developerSkillType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DeveloperSkillType</span><span class=\"token punctuation\">.</span>FRONT_END<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">developerLevel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DeveloperLevel</span><span class=\"token punctuation\">.</span>SENIOR<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">memberId</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"memberId\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">given</span><span class=\"token punctuation\">(</span>dMakerService<span class=\"token punctuation\">.</span><span class=\"token function\">getAllEmployedDevelopers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">willReturn</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>juniorDeveloperDto<span class=\"token punctuation\">,</span> seniorDeveloperDto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        \n        mockMvc<span class=\"token punctuation\">.</span><span class=\"token function\">perform</span><span class=\"token punctuation\">(</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/developers\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">contentType</span><span class=\"token punctuation\">(</span>contentType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">andExpect</span><span class=\"token punctuation\">(</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isOk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">andDo</span><span class=\"token punctuation\">(</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">andExpect</span><span class=\"token punctuation\">(</span>\n            \t<span class=\"token function\">jsonPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.[0].developerSkillType\"</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">is</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DeveloperSkillType</span><span class=\"token punctuation\">.</span>BACK_END<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">andExpect</span><span class=\"token punctuation\">(</span>\n            \t<span class=\"token function\">jsonPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.[0].developerSkillType\"</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">is</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DeveloperLevel</span><span class=\"token punctuation\">.</span>JUNIOR<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">andExpect</span><span class=\"token punctuation\">(</span>\n            \t<span class=\"token function\">jsonPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.[1].developerSkillType\"</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">is</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DeveloperSkillType</span><span class=\"token punctuation\">.</span>FRONT_END<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">andExpect</span><span class=\"token punctuation\">(</span>\n            \t<span class=\"token function\">jsonPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$.[1].developerSkillType\"</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">is</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DeveloperLevel</span><span class=\"token punctuation\">.</span>SENIOR<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</br>\n</br>\n<h5>테스트를 진행해 보다가 만난 .IllegalArtumentException : JPA metamodel must not be empty! 에러!</h5>\n<p>-> 아래 SpringBootApplication에서 EnableJpaAuditing를 통해 Auditig을 활성화해주고 BaseEntity<em>(abstract class)</em>를 만들어서 각 테이블에 중복되는 필드들 (수정자, 수정시간 등)을 만들어 각 Entity는 BaseEntity를 상속 받아 사용했었는데,</p>\n<p>이와같이 Entity들의 생성 및 수정 LocalDateTime을 자동으로 관리해주는 Auditing 기능을 사용하기 위해 @EnableJpaAuditing를 @SpringBootApplication에 등록해놓은 것이 에러의 원인이였다.</p>\n<p>@EnableJpaAuditing 때문에 모든 테스트들이 항상 JPA 관련 Bean들을 필요로 하기 때문.</p>\n</br>\n<h5>💡 해결방법</h5>\n<ol>\n<li>\n<p><strong>Configuration 분리</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//기존</span>\n<span class=\"token annotation punctuation\">@EnableJpaAuditing</span>\n<span class=\"token annotation punctuation\">@SpringBootApplication</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DmakerApplication</span> <span class=\"token punctuation\">{</span>\n\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MyblogApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//변경후</span>\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token annotation punctuation\">@EnableJpaAuditing</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JpaConfiguration</span> <span class=\"token punctuation\">{</span>  \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@SpringBootApplication</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DmakerApplication</span> <span class=\"token punctuation\">{</span>\n\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MyblogApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p><strong>MockBean 추가</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@WebMvcTest</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DMakerController</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@MockBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JpaMetamodelMappingContext</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ol>\n</br>\n<p>이와 같이 @WebMvcTest를 통해 Controller 테스트를 하면 통합 테스트를 진행하기 어려운 테스트(ex테스트로 호출해보기 우려운 API) 에서도 Mock을 통해 가짜 객체로 테스트도 가능하고 WebApplication 관련된 Bean들만 등록하기 때문에 통합 테스트보다 빠르다는 장점도 있지만</p>\n<p>Mock기반으로 테스트를 진행하기 때문에 실제 환경에서 제대로 동작하지 않을 수도있다는 단점이 있다.</p>\n</br>\n</br>\n<h2>참고자료</h2>\n<ul>\n<li><a href=\"https://goddaehee.tistory.com/212\">갓대희의 작은공간</a></li>\n<li><a href=\"https://xlffm3.github.io/spring%20&#x26;%20spring%20boot/JPAError/\">Spring Boot 테스트 에러 : JPA metamodel must not be empty!</a></li>\n</ul>","excerpt":"📋 Controller 테스트 작성 @WebMvcTest - MVC를 위한 테스트로 컨트롤러가 예상대로 동작하는지 테스트하는데 사용 Spring MVC…","frontmatter":{"date":"March 28, 2022","slug":"/webMvcTest","title":"Controller 테스트 @WebMvcTest","description":"Controller 테스트 @WebMvcTest 및 JPA metamodel must not be empty! 에러 해결기록","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/9cf5dd5c1ba818075caa365103cec0b8/4a49b/webMvcTest.jpg","srcSet":"/static/9cf5dd5c1ba818075caa365103cec0b8/37bba/webMvcTest.jpg 750w,\n/static/9cf5dd5c1ba818075caa365103cec0b8/61c72/webMvcTest.jpg 1080w,\n/static/9cf5dd5c1ba818075caa365103cec0b8/4a49b/webMvcTest.jpg 1280w","sizes":"100vw"},"sources":[{"srcSet":"/static/9cf5dd5c1ba818075caa365103cec0b8/a66aa/webMvcTest.webp 750w,\n/static/9cf5dd5c1ba818075caa365103cec0b8/65dd5/webMvcTest.webp 1080w,\n/static/9cf5dd5c1ba818075caa365103cec0b8/71d4d/webMvcTest.webp 1280w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5625}}}}}},"pageContext":{"id":"0578b566-ed2b-5398-be36-80c2073635bb","previous":{"id":"f52c18f8-b623-51d4-afef-0d6866a7df6e","frontmatter":{"slug":"/ExtendWith","template":"blog-post","title":"Service 테스트 @ExtendWith"}},"next":{"id":"d7e42c1d-7c16-5ed8-b85c-454bc265931a","frontmatter":{"slug":"/","template":"index-page","title":"Moongkim 개발일지"}}}},
    "staticQueryHashes": ["228695001","2744905544","358227665"]}