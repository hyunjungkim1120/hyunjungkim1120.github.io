{
    "componentChunkName": "component---src-templates-algorithm-post-js",
    "path": "/lessons/12913",
    "result": {"data":{"markdownRemark":{"id":"74cc6b01-796c-55f2-ba04-6d4f0c29d1f5","html":"</br>\n</br>\n<p>전체 소스코드 및 출처는 게시글 맨 아래있습니다.</p>\n</br>\n<h2><strong>문제</strong></h2>\n<h6>문제 설명</h6>\n<p>땅따먹기 게임을 하려고 합니다. 땅따먹기 게임의 땅(land)은 총 N행 4열로 이루어져 있고, 모든 칸에는 점수가 쓰여 있습니다. 1행부터 땅을 밟으며 한 행씩 내려올 때, 각 행의 4칸 중 한 칸만 밟으면서 내려와야 합니다. <strong>단, 땅따먹기 게임에는 한 행씩 내려올 때, 같은 열을 연속해서 밟을 수 없는 특수 규칙이 있습니다.</strong></p>\n<p>예를 들면,</p>\n<p>| 1 | 2 | 3 | 5 |</p>\n<p>| 5 | 6 | 7 | 8 |</p>\n<p>| 4 | 3 | 2 | 1 |</p>\n<p>로 땅이 주어졌다면, 1행에서 네번째 칸 (5)를 밟았으면, 2행의 네번째 칸 (8)은 밟을 수 없습니다.</p>\n<p>마지막 행까지 모두 내려왔을 때, 얻을 수 있는 점수의 최대값을 return하는 solution 함수를 완성해 주세요. 위 예의 경우, 1행의 네번째 칸 (5), 2행의 세번째 칸 (7), 3행의 첫번째 칸 (4) 땅을 밟아 16점이 최고점이 되므로 16을 return 하면 됩니다.</p>\n<h5>제한사항</h5>\n<ul>\n<li>행의 개수 N : 100,000 이하의 자연수</li>\n<li>열의 개수는 4개이고, 땅(land)은 2차원 배열로 주어집니다.</li>\n<li>점수 : 100 이하의 자연수</li>\n</ul>\n<h5>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>land</th>\n<th>answer</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[[1,2,3,5],[5,6,7,8],[4,3,2,1]]</td>\n<td>16</td>\n</tr>\n</tbody>\n</table>\n<h5>입출력 예 설명</h5>\n<p>입출력 예 #1\n문제의 예시와 같습니다.</p>\n</br>\n<h4>DP (Dynamic Programming) 동적 계획법</h4>\n<p>1.Overlapping Subproblems(겹치는 부분 문제), 2.Optimal Substructure(최적 부분 구조) 의 2가지 조건을 만족할 경우 즉, <strong>동일한 문제들이 반복하는 경우 이전의 문제의 답을 통해 지금 현재의 문제를 바로 해결한다!</strong> 가 핵심입니다.</p>\n<p>해당 문제의  경우도 0번줄에 서 아래 1번줄로 넘어갈경우 1번줄의 인덱스 0칸에선 바로위인 0번줄의 0번칸을 제외하고 1,2,3 칸중에서 가장 큰 수를 골라서 더하고 2번줄에선 더해놓았던 누적 합1번줄을 사용하는 방식으로 문제를 해결하였습니다. </p>\n<h2>풀이 소스 코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{</span>\n    \n    <span class=\"token keyword\">int</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> land<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>land<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>land<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>j <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>land<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>land<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>j <span class=\"token operator\">==</span><span class=\"token number\">3</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>land<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>land<span class=\"token punctuation\">[</span>land<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>land<span class=\"token punctuation\">[</span>land<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>land<span class=\"token punctuation\">[</span>land<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>land<span class=\"token punctuation\">[</span>land<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</br>\n<blockquote>\n<p><em>출처 :  <a href=\"https://programmers.co.kr/learn/courses/30/lessons/12913?language=java\">https://programmers.co.kr/learn/courses/30/lessons/12913?language=java</a></em></p>\n</blockquote>","excerpt":"전체 소스코드 및 출처는 게시글 맨 아래있습니다. 문제 문제 설명 땅따먹기 게임을 하려고 합니다. 땅따먹기 게임의 땅(land)은 총 N행 4열로 이루어져 있고, 모든 칸에는 점수가 쓰여 있습니다. 1행부터 땅을 밟으며 한 행씩 내려올 때, 각 행의…","frontmatter":{"date":"January 01, 2021","slug":"/lessons/12913","title":"땅따먹기(프로그래머스) Java","description":"https://programmers.co.kr/learn/courses/30/lessons/12913?language=java 프로그래머스 코딩테스트 연습 - 땅따먹기","featuredImage":null}}},"pageContext":{"id":"74cc6b01-796c-55f2-ba04-6d4f0c29d1f5","previous":null,"next":{"id":"45d8da17-1d3a-5957-9e70-b325f62d2b00","frontmatter":{"slug":"/perm-comb","template":"algorithm-post","title":"순열과 조합 알고리즘 Java"}}}},
    "staticQueryHashes": ["228695001","2744905544","358227665"]}